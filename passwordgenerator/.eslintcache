[{"/Users/chrisurbano/Desktop/password-webapp/passwordgenerator/src/index.js":"1","/Users/chrisurbano/Desktop/password-webapp/passwordgenerator/src/App.js":"2","/Users/chrisurbano/Desktop/password-webapp/passwordgenerator/src/PasswordGenerator.js":"3"},{"size":222,"mtime":1607886676472,"results":"4","hashOfConfig":"5"},{"size":1361,"mtime":1607887197260,"results":"6","hashOfConfig":"5"},{"size":1561,"mtime":1607751889194,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"y00wct",{"filePath":"11","messages":"12","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"/Users/chrisurbano/Desktop/password-webapp/passwordgenerator/src/index.js",[],["17","18"],"/Users/chrisurbano/Desktop/password-webapp/passwordgenerator/src/App.js",["19"],"/Users/chrisurbano/Desktop/password-webapp/passwordgenerator/src/PasswordGenerator.js",["20","21"],"import { isUpdateExpression } from \"@babel/types\";\nimport { isSymbol } from \"util\";\n\nlet characters = '';\nlet passwordLength = 0;\n\n\nconst addUpperCase = isUpperCase => {\n    if (isUpperCase) {\n        characters += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    }\n    return '';\n}\n\nconst addLowerCase = isLowerCase => {\n    if (isLowerCase) {\n        characters += 'abcdefghijklmnopqrstuvwxyz';\n    }\n    return '';\n}\n\n\nconst addSymbols = isSymbolic => {\n    if (isSymbolic) {\n        characters += '~`!@#$%^&*()-_=+{[}]:;?.,/><';\n    }\n    return '';\n}\n\nconst addNumbers = isNumeric => {\n    if (isNumeric) {\n        characters += '123456789';\n    }\n    return '';\n}\n\nconst getRandomIntger = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst passwordCharacters = () => {\n    let password = '';\n    if(characters.length < 1){\n        return \"You will find what you are looking for\";\n    }\n    for(let i = 0; i <passwordLength; i++){\n        password += characters[getRandomIntger(0,characters.length - 1)];\n    }\n    characters = '';\n    passwordLength = 0;\n    return password;\n}\n\nexport const setPasswordLength = length => {\n    passwordLength = length;\n    return passwordLength;\n}\n\nexport const generatePassword = (passwordProps, passwordLength) => {\n    const {uppercase, lowercase, symbols, numbers } = passwordProps;\n    setPasswordLength(passwordLength);\n    addLowerCase(lowercase);\n    addUpperCase(uppercase);\n    addSymbols(symbols);\n    addNumbers(numbers);\n    const password = passwordCharacters;\n    return password;\n}\n\n\n",["22","23"],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":null,"fatal":true,"severity":2,"message":"28","line":31,"column":21},{"ruleId":"29","severity":1,"message":"30","line":1,"column":10,"nodeType":"31","messageId":"32","endLine":1,"endColumn":28},{"ruleId":"29","severity":1,"message":"33","line":2,"column":10,"nodeType":"31","messageId":"32","endLine":2,"endColumn":18},{"ruleId":"24","replacedBy":"34"},{"ruleId":"26","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 29 | \u001b[39m      a \u001b[33m+=\u001b[39m b[\u001b[33mMath\u001b[39m\u001b[33m.\u001b[39mfloor(\u001b[33mMath\u001b[39m\u001b[33m.\u001b[39mrandom() \u001b[33m*\u001b[39m b\u001b[33m.\u001b[39mlength)]\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 30 | \u001b[39m    }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 31 | \u001b[39m    \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39msetState(s tate \u001b[33m=>\u001b[39m ({\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 32 | \u001b[39m      password\u001b[33m:\u001b[39m { \u001b[33m...\u001b[39mstate\u001b[33m.\u001b[39mpassword\u001b[33m,\u001b[39m data\u001b[33m:\u001b[39m a }\u001b[0m\n\u001b[0m \u001b[90m 33 | \u001b[39m    }))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m  }\u001b[0m","no-unused-vars","'isUpdateExpression' is defined but never used.","Identifier","unusedVar","'isSymbol' is defined but never used.",["36"],["37"],"no-global-assign","no-unsafe-negation"]